<div class="controls">
  <div class="left">
    <div class="input-wrapper">
      <label for="from">starting date (defaults to now)</label>
      {{input id="from" value=from type="date" class="input"}}
    </div>

    <div class="input-wrapper">
      <label for="to">countdown until...</label>
      {{input id="to" value=to type="date" class="input"}}
    </div>

    <fieldset class="fieldset">
      <legend>pick a unit</legend>
      <label>
        <input name='unit' type='radio' {{action (mut unit) 'months' on='change'}} checked=true />
        months
      </label>
      <label>
        <input name='unit' type='radio' {{action (mut unit) 'days' on='change'}} />
        days
      </label>
      <label>
        <input name='unit' type='radio' {{action (mut unit) 'hours' on='change'}} />
        hours
      </label>
      <label>
        <input name='unit' type='radio' {{action (mut unit) 'minutes' on='change'}} />
        minutes
      </label>
      <label>
        <input name='unit' type='radio' {{action (mut unit) 'seconds' on='change'}} />
        seconds
      </label>
    </fieldset>

  </div>

  <div class="right">
    {{!-- BEGIN-SNIPPET count-down --}}
    The election {{count-down unit=unit from=(or from (now)) to=to}}
    {{!-- END-SNIPPET --}}
    {{code-snippet name="count-down.hbs"}}
  </div>
</div>

<div class="instructions">
{{md-text text="
  `nypr-countdown` exposes a simple `count-down` component which provides some nice defaults for counting down to a specified date.

  Try using the controls above to adjust the `to` and `from` parameters, which are passed to the component above, as show in the code snippet.

  The `count-down` component will render a `<span/>` tag with a `.count-down` class so it may be targeted with CSS.

  ## params

  name | type | description
  --- | --- | ---
  `from` | `String`, `Date` | The starting point from which to calculate the duration. Defaults to now.
  `to` | `String`, `Date` | The target date to calculate against.
  `unit` | `String` | One of: `months`, `days`, `hours`, `minutes`, `seconds`.

  If the `from` and `to` values are Strings, they must follow the ISO 8601 format. Any of the following work:
  - simple date: `2018-6-25`
  - simple datetime: `2018-6-25T11:30:00`
  - date time with timezone offset: `2018-6-25T11:30:00-4:00`

  It's recommended to use a date object or a full timestamp with the time zone information.
"}}
</div>
